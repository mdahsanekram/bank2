{"version":3,"sources":["logo.svg","component/PiChart.js","component/TableData.js","component/DataTable/Header/index.js","component/DataTable/Pagination/index.js","component/DataTable/Search/index.js","component/FullPageLoader/index.js","component/hooks/useFullPageLoader.js","component/BankData.js","App.js","reportWebVitals.js","index.js"],"names":["React","Component","Header","headers","onSorting","useState","sortingField","setSortingField","sortingOrder","setSortingOrder","map","name","field","sortable","onClick","order","onSortingChange","icon","PaginationComponent","total","itemsPerPage","currentPage","onPageChange","totalPages","setTotalPages","useEffect","Math","ceil","paginationItems","useMemo","pages","i","push","Pagination","Item","active","Prev","disabled","Next","Search","onSearch","search","setSearch","type","className","style","width","placeholder","value","onChange","e","target","FullPageLoader","useFullPageLoader","loading","setLoading","BankData","comments","setComments","loader","showLoader","hideLoader","totalItems","setTotalItems","setCurrentPage","setSelectCity","sorting","setSorting","ITEMS_PER_PAGE","selectOptions","url","fetch","then","response","json","console","log","commentsData","computedComments","filter","comment","branch","toLowerCase","includes","bank_name","length","reversed","sort","a","b","localeCompare","slice","options","label","scope","bank_id","ifsc","district","page","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a41d72f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport ReactApexChart from 'react-apexcharts';\r\nimport './CSS/Page.css';\r\nimport Data from './data.json';\r\n\r\n\r\nclass PiChart extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n      \r\n        series: [],\r\n        options: {\r\n          chart: {\r\n            width: 380,\r\n            type: 'pie',\r\n          },\r\n          labels: ['Department 1', 'Department 2', 'Department 3', 'Department 4', 'Department 5'],\r\n          responsive: [{\r\n            breakpoint: 480,\r\n            options: {\r\n              chart: {\r\n                width: 200\r\n              },\r\n              legend: {\r\n                position: 'bottom'\r\n              }\r\n            }\r\n          }],\r\n          dataLabels: {\r\n            enabled: true,\r\n            formatter: function (val) {\r\n              return (val).toFixed(0) + \"%\"\r\n            },\r\n            \r\n      \r\n          },\r\n        },\r\n      \r\n      \r\n      };\r\n\r\n     \r\n    }\r\n\r\n\r\n\r\n    componentDidMount()\r\n    {\r\n        for(let i=0;i<Data.length;i++)\r\n        {\r\n          parseFloat(this.state.series.push(Data[i].Sales));\r\n        }\r\n\r\n\r\n    }\r\n  \r\n\r\n    render() {\r\n\r\n      \r\n      return (\r\n        <>\r\n       \r\n      \r\n\r\n  <div className=\"Margin\">\r\n \r\n<ReactApexChart options={this.state.options} series={this.state.series} type=\"pie\" width={450} />\r\n</div>\r\n</>\r\n\r\n\r\n      );\r\n    }\r\n  }\r\n\r\n  export default PiChart;\r\n","import React from 'react';\r\nimport './CSS/Page.css';\r\nimport Data from './data.json';\r\nimport { Table } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nclass TableData extends React.Component {\r\n  constructor(props)\r\n  {\r\n      super(props);\r\n\r\n      this.state  = {\r\n        data :[]\r\n      }\r\n  }\r\n\r\n\r\n  componentDidMount()\r\n    {       \r\n\r\n        axios.get('https://vast-shore-74260.herokuapp.com/banks?city=MUMBAI')\r\n\r\n            .then((response)=>{             \r\n\t\t\t\t        \r\n                this.setState({\r\n                  \r\n                  \r\n                });\r\n                console.log(\"hii\");\r\n                \r\n            }).catch(function(error)\r\n            {\r\n                alert(error);\r\n            })\r\n            .then(function () {\r\n              console.log(\"response\");\r\n              });\r\n\r\n    }\r\n\r\n    render() {\r\n      \r\n        return (\r\n            <div className=\"Margin\">\r\n            \r\n\r\n    <table className=\"table table-bordered\">\r\n    <thead>  \r\n                        <tr>\r\n                          <th scope=\"col\">Department Name </th>\r\n                          <th scope=\"col\">Sales</th>\r\n                          <th scope=\"col\">Percentage</th>\r\n                          \r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        \r\n    {\r\n      Data.map(post=>{return(\r\n        \r\n        <tr>\r\n          <td>{post.Department_Name}</td>\r\n          <td>{post.Sales}</td>\r\n          <td>{post.Percentage}</td>\r\n          </tr>\r\n        \r\n\r\n      )\r\n      }\r\n      )\r\n      \r\n    }\r\n    </tbody>\r\n    </table>\r\n    \r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default TableData;","import React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst Header = ({ headers, onSorting }) => {\r\n    const [sortingField, setSortingField] = useState(\"\");\r\n    const [sortingOrder, setSortingOrder] = useState(\"asc\");\r\n\r\n    const onSortingChange = (field) => {\r\n        const order =\r\n            field === sortingField && sortingOrder === \"asc\" ? \"desc\" : \"asc\";\r\n\r\n        setSortingField(field);\r\n        setSortingOrder(order);\r\n        onSorting(field, order);\r\n    };\r\n\r\n    return (\r\n        <thead>\r\n            <tr>\r\n                {headers.map(({ name, field, sortable }) => (\r\n                    <th\r\n                        key={name}\r\n                        onClick={() =>\r\n                            sortable ? onSortingChange(field) : null\r\n                        }\r\n                    >\r\n                        {name}\r\n\r\n                        {sortingField && sortingField === field && (\r\n                            <FontAwesomeIcon\r\n                                icon={\r\n                                    sortingOrder === \"asc\"\r\n                                        ? \"arrow-down\"\r\n                                        : \"arrow-up\"\r\n                                }\r\n                            />\r\n                        )}\r\n                    </th>\r\n                ))}\r\n            </tr>\r\n        </thead>\r\n    );\r\n};\r\n\r\nexport default Header;","import React, { useEffect, useState, useMemo } from \"react\";\r\nimport Pagination from \"react-bootstrap/Pagination\";\r\n\r\nconst PaginationComponent = ({\r\n    total = 0,\r\n    itemsPerPage = 10,\r\n    currentPage = 1,\r\n    onPageChange\r\n}) => {\r\n    const [totalPages, setTotalPages] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (total > 0 && itemsPerPage > 0)\r\n            setTotalPages(Math.ceil(total / itemsPerPage));\r\n    }, [total, itemsPerPage]);\r\n\r\n    const paginationItems = useMemo(() => {\r\n        const pages = [];\r\n\r\n        for (let i = 1; i <= totalPages; i++) {\r\n            pages.push(\r\n                <Pagination.Item\r\n                    key={i}\r\n                    active={i === currentPage}\r\n                    onClick={() => onPageChange(i)}\r\n                >\r\n                    {i}\r\n                </Pagination.Item>\r\n            );\r\n        }\r\n\r\n        return pages;\r\n    }, [totalPages, currentPage]);\r\n\r\n    if (totalPages === 0) return null;\r\n\r\n    return (\r\n        <Pagination>\r\n            <Pagination.Prev\r\n                onClick={() => onPageChange(currentPage - 1)}\r\n                disabled={currentPage === 1}\r\n            />\r\n            {paginationItems}\r\n            <Pagination.Next\r\n                onClick={() => onPageChange(currentPage + 1)}\r\n                disabled={currentPage === totalPages}\r\n            />\r\n        </Pagination>\r\n    );\r\n};\r\n\r\nexport default PaginationComponent;","import React, { useState } from \"react\";\r\n\r\nconst Search = ({ onSearch }) => {\r\n    const [search, setSearch] = useState(\"\");\r\n\r\n    const onInputChange = value => {\r\n        setSearch(value);\r\n        onSearch(value);\r\n    };\r\n    return (\r\n        <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            style={{ width: \"240px\" }}\r\n            placeholder=\"Search\"\r\n            value={search}\r\n            onChange={e => onInputChange(e.target.value)}\r\n        />\r\n    );\r\n};\r\n\r\nexport default Search;","import React from \"react\";\r\n// import Spinner from \"resources/images/spinner.gif\";\r\n\r\nconst FullPageLoader = () => {\r\n    return (\r\n        <div className=\"fp-container\">\r\n            {/* <img src={Spinner} className=\"fp-loader\" alt=\"loading\" /> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FullPageLoader;","import React, { useState } from \"react\";\r\nimport FullPageLoader from \"../FullPageLoader\";\r\n\r\nconst useFullPageLoader = () => {\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    return [\r\n        loading ? <FullPageLoader /> : null,\r\n        () => setLoading(true), //Show loader\r\n        () => setLoading(false) //Hide Loader\r\n    ];\r\n};\r\n\r\nexport default useFullPageLoader;","import React, { useEffect, useState, useMemo } from \"react\";\r\n// import Header from \"./Header\";\r\nimport { TableHeader, Pagination, Search } from \"./DataTable\";\r\nimport useFullPageLoader from \"./hooks/useFullPageLoader\";\r\nimport Select from 'react-select';\r\n// import ExternalInfo from \"components/ExternalInfo\";\r\n// import AppConfig from \"App.config\";\r\n\r\nconst BankData = () => {\r\n    const [comments, setComments] = useState([]);\r\n    const [loader, showLoader, hideLoader] = useFullPageLoader();\r\n    const [totalItems, setTotalItems] = useState(0);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    let [selectCity , setSelectCity] = useState(2);\r\n    const [search, setSearch] = useState(\"\");\r\n    const [sorting, setSorting] = useState({ field: \"\", order: \"\" });\r\n\r\n    const ITEMS_PER_PAGE = 100;\r\n\r\n    const headers = [\r\n        { name: \" BANK ID\", field: \"bank_id\", sortable: false },\r\n        { name: \"IFSC\", field: \"ifsc\", sortable: true },\r\n        { name: \"Branch\", field: \"branch\", sortable: false },\r\n        { name: \"Bank Name\", field: \"bank_name\", sortable: false },\r\n        { name: \"Address\", field: \"address\", sortable: false }\r\n    ];\r\n    const options = [\r\n        {\r\n          label: \"SELECT\",\r\n          value: \"\",\r\n        },\r\n        {\r\n          label: \"BANGALORE\",\r\n          value: \"BANGALORE\",\r\n        },\r\n        {\r\n          label: \"PUNJAB\",\r\n          value: \"PUNJAB\",\r\n        },\r\n        {\r\n          label: \"DELHI\",\r\n          value: \"DELHI\",\r\n        },\r\n        {\r\n            label: \"MUMBAI\",\r\n            value: \"MUMBAI\",\r\n          },\r\n      ];\r\n\r\n      setSelectCity = (selectOptions)=>{\r\n\r\n      let url = \"https://vast-shore-74260.herokuapp.com/banks?city=\"+selectOptions.value;\r\n\r\n      fetch(url)\r\n      .then(response => response.json())\r\n      .then(json => {\r\n          hideLoader();\r\n          setComments(json);\r\n          console.log(json);\r\n      });\r\n\r\n      \r\n      }\r\n\r\n\r\n    useEffect(() => {\r\n        const getData = () => {\r\n            showLoader();\r\n\r\n            fetch(\"https://vast-shore-74260.herokuapp.com/banks?city=MUMBAI\")\r\n                .then(response => response.json())\r\n                .then(json => {\r\n                    hideLoader();\r\n                    setComments(json);\r\n                    console.log(json);\r\n                });\r\n        };\r\n\r\n        getData();\r\n    }, []);\r\n\r\n    const commentsData = useMemo(() => {\r\n        let computedComments = comments;\r\n\r\n        if (search) {\r\n            computedComments = computedComments.filter(\r\n                comment =>\r\n                    comment.branch.toLowerCase().includes(search.toLowerCase()) ||\r\n                    comment.bank_name.toLowerCase().includes(search.toLowerCase())\r\n            );\r\n        }\r\n\r\n        setTotalItems(computedComments.length);\r\n\r\n        //Sorting comments\r\n        if (sorting.field) {\r\n            const reversed = sorting.order === \"asc\" ? 1 : -1;\r\n            computedComments = computedComments.sort(\r\n                (a, b) =>\r\n                    reversed * a[sorting.field].localeCompare(b[sorting.field])\r\n            );\r\n        }\r\n\r\n        //Current Page slice\r\n        return computedComments.slice(\r\n            (currentPage - 1) * ITEMS_PER_PAGE,\r\n            (currentPage - 1) * ITEMS_PER_PAGE + ITEMS_PER_PAGE\r\n        );\r\n    }, [comments, currentPage, search, sorting]);\r\n\r\n    return (\r\n        <>\r\n            {/* <Header title=\"Building a data table in react\" /> */}\r\n\r\n            {/* <ExternalInfo page=\"datatable\" /> */}\r\n\r\n            <div className=\"container\">\r\n\r\n            <h1>Bank Branches</h1>\r\n\r\n            <div className=\" row\">\r\n                <div className=\"col-md-12 text-left\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-3 flex-row-reverse\">\r\n\r\n                        <Select onChange={setSelectCity} options={options}/>\r\n\r\n\r\n                      \r\n                        </div>\r\n                        <div className=\"col-md-6 flex-row-reverse\"></div>\r\n                        <div className=\"col-md-3 d-flex flex-row-reverse\">\r\n                            <Search\r\n                                onSearch={value => {\r\n                                    setSearch(value);\r\n                                    setCurrentPage(1);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <table className=\"table table-striped\">\r\n                        <TableHeader\r\n                            headers={headers}\r\n                            onSorting={(field, order) =>\r\n                                setSorting({ field, order })\r\n                            }\r\n                        />\r\n                        <tbody>\r\n                            {commentsData.map(comment => (\r\n                                <tr>\r\n                                    <th scope=\"row\" key={comment.bank_id}>\r\n                                        {comment.bank_id}\r\n                                    </th>\r\n                                    <td>{comment.ifsc}</td>\r\n                                    <td>{comment.branch}</td>\r\n                                    <td>{comment.bank_name}</td>\r\n                                    <td>{comment.district}</td>\r\n                                    \r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                    <Pagination\r\n                                total={totalItems}\r\n                                itemsPerPage={ITEMS_PER_PAGE}\r\n                                currentPage={currentPage}\r\n                                onPageChange={page => setCurrentPage(page)}\r\n                            />\r\n                </div>\r\n            </div>\r\n            </div>\r\n            {loader}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default BankData;","import logo from './logo.svg';\nimport './App.css';\nimport PiChart from './component/PiChart';\nimport TableData from './component/TableData';\nimport BankData from './component/BankData';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <div className=\"row\">\n      <div className=\"col-md-6\">\n      <TableData/>\n      </div>\n      <div className=\"col-md-6\">\n      <PiChart/>\n      </div>\n      </div> */}\n      <BankData/>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}